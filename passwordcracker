#!/usr/bin/env python3
import argparse
import subprocess
import os
import sys

def build_project():
    os.makedirs("build", exist_ok=True)
    os.chdir("build")
    subprocess.run(["cmake", "-G", "Ninja", ".."], check=True)
    subprocess.run(["ninja"], check=True)
    os.chdir("..")

def run_executable(executable_name, additional_args):
    subprocess.run(["ninja"], cwd="build", check=True)
    executable_path = os.path.join("build", executable_name)
    if not os.path.isfile(executable_path):
        executable_path = os.path.join("build","benchmarks",executable_name)
        if not os.path.isfile(executable_path):
            print(f"Error: Executable '{executable_name}' not found in the build directory")
            sys.exit(1)

    subprocess.run([executable_path] + additional_args, check=True)

def generate_doxygen():
    try:
        subprocess.run(["doxygen", "--version"], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    except subprocess.CalledProcessError:
        print("Error: Doxygen is not installed. Please install it to generate documentation")
        sys.exit(1)
    doxyfile_path = "doc/Doxyfile"
    if not os.path.isfile(doxyfile_path):
        print("Error: Doxyfile not found in the doc directory")
        sys.exit(1)
    subprocess.run(["doxygen", doxyfile_path], check=True)

def main():
    parser = argparse.ArgumentParser(prog='./passwordcracker', description="Password-Cracker Utility")
    subparsers = parser.add_subparsers(dest="command")

    subparsers.add_parser("build", help="Build the project using cmake")

    run_parser = subparsers.add_parser("run", help="Run the specified executable")
    run_parser.add_argument("executable", help="Name of the executable to run")

    run_parser.add_argument('args', nargs=argparse.REMAINDER, help="Additional arguments for the executable")

    subparsers.add_parser("doc", help="Generate Doxygen documentation")

    args = parser.parse_args()

    if args.command == "build":
        build_project()
    elif args.command == "run":
        run_executable(args.executable, args.args)
    elif args.command == "doc":
        generate_doxygen()
    else:
        parser.print_help()

if __name__ == "__main__":
    main()
